#!/bin/bash

docker-remove-images(){
	# shellcheck disable=SC2046
	docker rmi $(docker images -f dangling=true -q)
}

docker-stop-all(){
	# shellcheck disable=SC2046
	docker rm -f $(docker ps -aq)
}

docker-remove-all(){
	# shellcheck disable=SC2046
	docker rm -f $(docker ps -aq)
}

docker-update-all(){
	docker images | grep -v REPOSITORY | awk '{printf $1; printf ":"; print $2}' | xargs -L1 docker pull
}

get-container-ip(){
	docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' "$@"
}

azuredatastudio(){
	docker rm -f azuredatastudio

	docker run -d \
		-v /etc/localtime:/etc/localtime:ro \
		-v /tmp/.X11-unix:/tmp/.X11-unix  \
		-e "DISPLAY=unix${DISPLAY}" \
		--device /dev/dri \
		--name azuredatastudio \
		markgaze/azuredatastudio
}

franz(){
	docker rm -f franz

	docker run -d \
		-v /etc/localtime:/etc/localtime:ro \
		-v /tmp/.X11-unix:/tmp/.X11-unix \
		-v /run/user/1000/pulse/native:/run/user/1000/pulse/native \
		-v ~:/home/user \
		-e "DISPLAY=unix${DISPLAY}" \
		-e PULSE_SERVER=unix:/run/user/1000/pulse/native \
		--shm-size 4g \
		--device /dev/dri \
		--device /dev/snd \
		--group-add "$(getent group audio | cut -d: -f3)" \
		--name franz \
		markgaze/franz
}

lpass(){
	docker run --rm -it \
		-v "${HOME}/.lpass:/root/.lpass" \
		--name lpass \
		jessfraz/lpass "$@"
}

sqlectron(){
	docker rm -f sqlectron

	docker run -d \
		-v /etc/localtime:/etc/localtime:ro \
		-v /tmp/.X11-unix:/tmp/.X11-unix  \
		-e "DISPLAY=unix${DISPLAY}" \
		--device /dev/dri \
		--name sqlectron \
		markgaze/sqlectron
}

vscode(){
	docker rm -f vscode

	docker run -d \
		-v /etc/localtime:/etc/localtime:ro \
		-v /tmp/.X11-unix:/tmp/.X11-unix  \
    -v ~/git:/home/user/git \
		-e "DISPLAY=unix${DISPLAY}" \
		--device /dev/dri \
		--name vscode \
		markgaze/vscode
}

vscode-dotnet(){
	docker rm -f vscode-dotnet

	docker run -d \
		-v /etc/localtime:/etc/localtime:ro \
		-v /tmp/.X11-unix:/tmp/.X11-unix  \
    -v ~/git:/home/user/git \
		-e "DISPLAY=unix${DISPLAY}" \
		--device /dev/dri \
		--name vscode-dotnet \
		markgaze/vscode:dotnetcore
}

vscode-react(){
	docker rm -f vscode-react

	docker run -d \
		-v /etc/localtime:/etc/localtime:ro \
		-v /tmp/.X11-unix:/tmp/.X11-unix  \
    -v ~/git:/home/user/git \
		-e "DISPLAY=unix${DISPLAY}" \
		--device /dev/dri \
		--name vscode-react \
		markgaze/vscode:react
}

vscode-go(){
	docker rm -f vscode-go

	docker run -d \
		-v /etc/localtime:/etc/localtime:ro \
		-v /tmp/.X11-unix:/tmp/.X11-unix  \
    -v ~/git:/home/user/go/src/github.com \
		-e "DISPLAY=unix${DISPLAY}" \
		--device /dev/dri \
		--name vscode-go \
		markgaze/vscode:go
}

vscode-go-lambda(){
	docker rm -f vscode-go-lambda

	docker run -d \
		-v /etc/localtime:/etc/localtime:ro \
		-v /tmp/.X11-unix:/tmp/.X11-unix  \
    -v ~/git:/home/user/git \
		-e "DISPLAY=unix${DISPLAY}" \
		--device /dev/dri \
		--name vscode-go-lambda \
		markgaze/vscode:go-lambda
}

mopidy() {
	local state
	state=$(docker inspect --format "{{.State.Running}}" mopidy 2>/dev/null)
	if [[ "$state" == "true" ]] && [[ "$*" != "" ]]; then
		return 0
	fi

	docker run -d \
		--user root \
		--device /dev/snd \
		--device /dev/dri \
		-v /home/markgaze/.config/mopidy/mopidy.conf:/var/lib/mopidy/.config/mopidy/mopidy.conf \
		-v /etc/asound.conf:/etc/asound.conf \
		-v /tmp/mpd.fifo:/tmp/mpd.fifo \
		-p 6601:6600 \
		-p 6680:6680 \
		--user "$UID:$GID" \
		--group-add "$(getent group audio | cut -d: -f3)" \
		--name mopidy \
		markgaze/mopidy:latest \
		mopidy -o youtube/enabled=false
}
